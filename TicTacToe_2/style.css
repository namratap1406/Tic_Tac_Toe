*, *::after, *::before {
  box-sizing: border-box;
} /*style for everything*/

:root { /*to easily modify and throughout*/
  --cell-size: 100px;
  --mark-size: calc(var(--cell-size) * .9);  /*size of X's & O's (i.e. 90% of cell size)*/
}

body {
  margin: 0;  /*no margins so its easier to put black background in place*/
}

.board {
  width: 100vw; /*viewwidth*/
  height: 100vh;  /*viewheight*/ 
  display: grid;
  justify-content: center;
  align-content: center;  /*everything inside the board is centered*/
  justify-items: center;  
  align-items: center;    /*individual items centered and not the cells themselves*/
  grid-template-columns: repeat(3, auto) /*3 separate columns auto sized*/
}

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  border: 1px solid black;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  cursor: pointer;
}

.cell:first-child,  /*remove the border of the grid*/
.cell:nth-child(2),
.cell:nth-child(3) { /*top*/
  border-top: none;
}

.cell:nth-child(3n + 1) {  /*left*/
  border-left: none;
}

.cell:nth-child(3n + 3) {  /*right*/
  border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) { /*bottom*/
  border-bottom: none;
}

.cell.x,
.cell.circle {
  cursor: not-allowed;
}

.cell.x::before,
.cell.x::after,
.cell.circle::before {
  background-color: black;
}

.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before {
  background-color: lightgrey;
}  /*hover shows the X or O as per the turn to play in empty cells*/

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after {
  content: '';
  position: absolute;
  width: calc(var(--mark-size) * .15); /*X & O is 15% of marksize*/
  height: var(--mark-size);
}

.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before {
  transform: rotate(45deg); /*rotating of a bar of X*/
}

.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after {
  transform: rotate(-45deg);  /*rotating of a bar of X*/
}

.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before, 
.board.circle .cell:not(.x):not(.circle):hover::after {
  content: '';
  position: absolute; 
  border-radius: 50%;  
}

.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before {
  width: var(--mark-size);
  height: var(--mark-size); /*outer circle*/
}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after {
  width: calc(var(--mark-size) * .7);
  height: calc(var(--mark-size) * .7);
  background-color: white;  /*inner circle*/
}

.winning-message {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, .9);
  justify-content: center;
  align-items: center;
  color: white;
  font-size: 5rem;
  flex-direction: column; /*to stack the msg on 1 another*/
}

.winning-message button {
  font-size: 3rem;
  background-color: white;
  border: 1px solid black;
  padding: .25em .5em;
  cursor: pointer;
}

.winning-message button:hover {
  background-color: black;
  color: white;
  border-color: white;
}

.winning-message.show {
  display: flex;
}